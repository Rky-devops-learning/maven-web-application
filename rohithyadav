def SendSlackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
node{
echo "the node name is:${env.NODE_NAME}"
echo "the build number is :${env.BUILD_NUMBER}"
echo "the job name is :${env.JOB_NAME}"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])
def mavenHome= tool name: "maven3.8.2"
try{
//githubcode
stage('checkoutcode'){
git branch: 'development', credentialsId: '1c91e83b-c1c8-45b5-b33e-5dc19f97ba09', url: 'https://github.com/Rky-devops-learning/maven-web-application.git'
}
//buildstage
stage('build'){
sh "$mavenHome/bin/mvn clean package"
}
/*
//sonarQubereport
stage('sonarQubereport'){
sh "$mavenHome/bin/mvn sonar:sonar"
}
//uploadartifacts
stage('uploadartifacts'){
sh "$mavenHome/bin/mvn deploy"
}
//deploythecodetotomcat
stage('deploytotomcat'){
 sshagent(['ce3de9cc-3eaf-4bec-88d3-57dd2dfbb112']) {
     sh"scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.111.170.225:/opt/apache-tomcat-9.0.59/webapps"
} 
}
*/
}
catch(e){
currentBuild.result="FAILED"
}
finally{
SendSlackNotification(currentBuild.result)
}
}//node closing
